# -*- coding: utf-8 -*-
"""Clustering_AF_Signal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10kf-swASYyiIq0Vk7GSEFmrf3CTBlkte

#Imports
"""

import numpy as np
import pandas as pd
import datetime as DT
from sklearn.cluster import KMeans
from sklearn.cluster import AffinityPropagation
from PIL import Image, ImageDraw, ImageFont
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D


"""#Access to GoogleDrive"""

# Commented out IPython magic to ensure Python compatibility.

# %cd /gdrive/My Drive/Dataset

"""#Load dataset"""

data = pd.read_csv('TrainingData.csv').values

"""#Preprocessing"""

numData = 19937
numFeature = 520
X = data[:numData , 0 : numFeature]
#X = data[:numData , 0:2 ]
lat = data[:numData,520]
lan = data[:numData,521]
#X = np.array([lat,lan])
#X= np.transpose(X)
floor = data[:numData,522]
#X = data[:numData , 0::522]
#df = np.where(X[:,0] == 100)
#fr = np.array(df)
#X[fr[0:4],0] = np.nan
#X[np.array(df),:] = np.nan

set(floor)

"""# KMeans Clustring"""

num_clusters = 5
kmeans = KMeans(n_clusters = num_clusters).fit(X)
labels = kmeans.labels_
centroids = kmeans.cluster_centers_

"""# Plotting"""
##plot waps only


fig = plt.figure()
plt.scatter(X[:,0], X[:,1], c=labels, marker="o", picker=True)

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.scatter(lat, lan, X[:,0], marker="o", picker=True)
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('wap0')
###############################################



fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.scatter(lat, lan, floor, c=labels, marker="o", picker=True)
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Floor')
##################################################
fig = plt.figure()
ax = fig.add_subplot(111)

ax.scatter(lat, lan, c=labels, marker="o", picker=True)
ax.set_xlabel('X')
ax.set_ylabel('Y')

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax = Axes3D(fig)

ax.view_init(elev=20., azim=45)

ax.scatter(lat, lan, floor, c=labels, marker="o", picker=True)
ax.set_xlabel('X')
ax.set_ylabel('Y')
#ax.set_zlabel('Floor')



"""# Affinity Clustering"""

#numData = 3000
#numFeature = 520
#
#N = np.size(data,0)
##idx = np.random.randint(0 , N , numData)
#X = data[:numData,0:numFeature]
#
#lat = data[:numData,520]
#lan = data[:numData,521]
#floor = data[:numData,522]
#
#ap = AffinityPropagation(preference =-477986,damping=0.88).fit(X)
#labels = ap.labels_
#num_clusters = len(set(labels))
#
#fig = plt.figure()
#ax = fig.add_subplot(111, projection='3d')
#ax.scatter(lat, lan, floor, c=labels, marker="o", picker=True)
#ax.set_xlabel('X')
#ax.set_ylabel('Y')
#ax.set_zlabel('Floor')
#
#fig = plt.figure()
#ax = fig.add_subplot(111)
#
#ax.scatter(lat, lan, c=labels, marker="o", picker=True)
#ax.set_xlabel('X')
#ax.set_ylabel('Y')
#
#fig = plt.figure()
#ax = fig.add_subplot(111, projection='3d')
#ax = Axes3D(fig)
#
#ax.view_init(elev=20., azim=45)
#
#ax.scatter(lat, lan, floor, c=labels, marker="o", picker=True)
#ax.set_xlabel('X')
#ax.set_ylabel('Y')
#ax.set_zlabel('Floor')